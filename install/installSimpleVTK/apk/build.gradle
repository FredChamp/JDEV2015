buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.+'
    }
}

apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}



android {

    compileSdkVersion 19
    buildToolsVersion "21.1.1"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
    }

    Properties signingProperties = new Properties()

    if (file("signing.properties").exists()) {
      signingProperties.load(new FileInputStream(file("signing.properties")))
      signingConfigs {
          release {
              storeFile file(signingProperties['signing.release.storeFile'])
              storePassword signingProperties['signing.release.storePassword']
              keyAlias signingProperties['signing.release.keyAlias']
              keyPassword signingProperties['signing.release.keyPassword']
          }
       }
   
       buildTypes {
        release {
          signingConfig signingConfigs.release
             
        }
    
        // beta {
        //   signingConfig signingConfigs.release
        // }
       }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "USE_BUGSENSE", "true"
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                       def file = output.outputFile
                     
                       if(output.zipAlign) {
                           output.outputFile = new File(file.parent, "NativeVTK" + "-release" + ".apk")
                       }
                       else{
                           output.outputFile = new File(file.parent,"NativeVTK" + "-release" + "-unaligned" + ".apk")
                       }
                   }
               }
        }

        // beta {
        //     buildConfigField "boolean", "USE_BUGSENSE", "true"
        // }

        debug {
            buildConfigField "boolean", "USE_BUGSENSE", "false"
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                       def file = output.outputFile
                       if(output.zipAlign) {
                           output.outputFile = new File(file.parent, "NativeVTK" + "-debug" + ".apk")
                       }
                       else {
                           output.outputFile = new File(file.parent,"NativeVTK" + "-debug" + "-unaligned" + ".apk")
                       }
                   }
               }
        }


        jnidebug.initWith(buildTypes.debug)
        jnidebug {
            jniDebuggable true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.

        //beta.setRoot('build-types/beta')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

}
